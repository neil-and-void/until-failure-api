### TYPES ###
scalar Time

type User {
  id: ID!
  name: String!
  email: String!
}

type WorkoutRoutine {
  id: ID!
  name: String!
  exerciseRoutines: [ExerciseRoutine]
}

type ExerciseRoutine {
  id: ID!
  name: String!
  sets: Int!
  reps: Int!
}

type WorkoutSession {
  id: ID!
  start: Time!
  end: Time
  exercises: [Exercise]!
}

type Exercise {
  id: ID!
  sets: [SetEntry]!
  notes: String
}

type SetEntry {
  id: ID!
  weight: Float!
  reps: Int!
}

type AuthError {
  message: String!
}

type AuthSuccess {
  refreshToken: String!
  accessToken: String!
}

union AuthResult = AuthError | AuthSuccess

type RefreshSuccess {
  accessToken: String!
}

### END TYPES ###

### INPUTS ###

input WorkoutRoutineInput {
  name: String!
  exerciseRoutines: [ExerciseRoutineInput]
}

input UpdateWorkoutRoutineInput {
  name: String
  exerciseRoutines: [ExerciseRoutineInput]
}

input UpdateExerciseRoutineInput {
  name: String
  sets: Int
  reps: Int
}

input ExerciseRoutineInput {
  name: String!
  sets: Int!
  reps: Int!
}

input WorkoutSessionInput {
  workoutRoutineId: ID!
  start: Time!
  end: Time
  exercises: [ExerciseInput]
}

input UpdateWorkoutSessionInput {
  start: Time
  end: Time
}

input ExerciseInput {
  exerciseRoutineId: ID!
  notes: String
  setEntries: [SetEntryInput]
}

input SetEntryInput {
  weight: Float!
  reps: Int!
}

### END INPUTS ###

type Query {
  workoutRoutines: [WorkoutRoutine]
  exerciseRoutines(workoutRoutineId: ID!): [ExerciseRoutine]
  workoutSessions: [WorkoutSession]
  workoutSession(workoutSessionId: ID!): WorkoutSession
  exercise(exerciseId: ID!): Exercise
  exercises(workoutSessionId: ID!): [Exercise]
}

type Mutation {
  login(email: String!, password: String!): AuthResult!
  signup(
    email: String!
    name: String!
    password: String!
    confirmPassword: String!
  ): AuthResult!
  refreshAccessToken(refreshToken: String!): RefreshSuccess!
  createWorkoutRoutine(routine: WorkoutRoutineInput!): WorkoutRoutine!
  updateWorkoutRoutine(
    workoutRoutineId: ID!
    updateWorkoutRoutineInput: UpdateWorkoutRoutineInput!
  ): WorkoutRoutine!
  deleteWorkoutRoutine(workoutRoutineId: ID!): ID!
  updateExerciseRoutine(
    exerciseRoutineId: ID!
    updateExerciseRoutineInput: UpdateExerciseRoutineInput!
  ): ExerciseRoutine!
  deleteExerciseRoutine(exerciseRoutineId: ID!): ID!
  addWorkoutSession(workout: WorkoutSessionInput!): ID!
  updateWorkoutSession(
    workoutSessionId: ID!
    updateWorkoutSessionInput: UpdateWorkoutSessionInput!
  ): WorkoutSession!
  addExercise(workoutSessionId: ID!, exercise: ExerciseInput!): ID!
  deleteExercise(exerciseRoutineId: ID!): ID!
  addSet(exerciseId: ID!, set: SetEntryInput): ID!
  updateSet(exerciseId: ID!, set: SetEntryInput): ID!
  deleteSet(setID: ID!): Int
}
