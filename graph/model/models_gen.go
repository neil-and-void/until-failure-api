// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type AuthResult interface {
	IsAuthResult()
}

type AuthError struct {
	Message string `json:"message"`
}

func (AuthError) IsAuthResult() {}

type AuthSuccess struct {
	RefreshToken string `json:"refreshToken"`
	AccessToken  string `json:"accessToken"`
}

func (AuthSuccess) IsAuthResult() {}

type Exercise struct {
	ID              string           `json:"id"`
	ExerciseRoutine *ExerciseRoutine `json:"exerciseRoutine"`
	Sets            []*SetEntry      `json:"sets"`
}

type ExerciseInput struct {
	ExerciseRoutineID string           `json:"exerciseRoutineId"`
	SetEntries        []*SetEntryInput `json:"setEntries"`
}

type ExerciseRoutine struct {
	ID   string `json:"id"`
	Name string `json:"name"`
	Sets int    `json:"sets"`
	Reps int    `json:"reps"`
}

type ExerciseRoutineInput struct {
	Name string `json:"name"`
	Sets int    `json:"sets"`
	Reps int    `json:"reps"`
}

type RefreshSuccess struct {
	AccessToken string `json:"accessToken"`
}

type SetEntry struct {
	ID     string  `json:"id"`
	Weight float64 `json:"weight"`
	Reps   int     `json:"reps"`
	Notes  *string `json:"notes"`
}

type SetEntryInput struct {
	Weight float64 `json:"weight"`
	Reps   int     `json:"reps"`
	Notes  *string `json:"notes"`
}

type User struct {
	ID    string `json:"id"`
	Name  string `json:"name"`
	Email string `json:"email"`
}

type Workout struct {
	ID             string          `json:"id"`
	WorkoutRoutine *WorkoutRoutine `json:"workoutRoutine"`
	Exercise       []*Exercise     `json:"exercise"`
}

type WorkoutRoutine struct {
	ID               string             `json:"id"`
	Name             string             `json:"name"`
	ExerciseRoutines []*ExerciseRoutine `json:"exerciseRoutines"`
}

type WorkoutRoutineInput struct {
	Name             string                  `json:"name"`
	ExerciseRoutines []*ExerciseRoutineInput `json:"exerciseRoutines"`
}

type WorkoutSessionInput struct {
	WorkoutRoutineID string           `json:"workoutRoutineId"`
	Start            time.Time        `json:"start"`
	End              *time.Time       `json:"end"`
	Exercises        []*ExerciseInput `json:"exercises"`
}
